# my, andreasl's, tig rc file.

# settings -----------------------------------------------------------------------------------------
set ignore-case = yes  # Enum consisting of the values: no, yes, smart-case
set mouse = false
set refresh-mode = after-command  # Enum: manual, auto, after-command, periodic
set main-view-id-display = yes  # show commit hashes in main view

color date cyan default
color diff.diff-index cyan default
color diff-stat cyan default

# key bindings -------------------------------------------------------------------------------------
# in tig, press `h` for quick overview of existing key bindings
# !  Run the command in the foreground with output shown.
# @  Run the command in the background with no output.
# ?  Prompt the user before executing the command.
# <  Exit Tig after executing the command.
# >  Re-open Tig instantly in the last displayed view after executing the command.

bind generic A @git add -A
bind generic a @git reset

bind generic B !bash -c '[[ "%(commit)" =~ ^0*$ ]] && git rebase --interactive HEAD~3 || git rebase --interactive "$(get-deeper-commit.sh %(commit)~1 HEAD~3)"'  # rebase interactively until the selected commit or the last 5 commits
bind main E ?rebase edit %(commit)
bind diff E ?rebase edit %(commit)
bind main F ?rebase fixup %(commit) HEAD
bind diff F ?rebase fixup %(commit) HEAD
bind generic P @sh -c "xdg-open \"$(dirname $(realpath %(file)))\""  # open path in standard program on linux
bind main S ?rebase squash %(commit) HEAD
bind diff S ?rebase squash %(commit) HEAD
bind generic U @git add -A
bind generic Z @?git checkout HEAD %(file)  # in status view, check out the HEAD version of a file

bind stage  D @?rm %(file)
bind status D @?rm %(file)

bind status S >!bash -c 'cd "$(dirname "%(file)")"; exec ${SHELL:-bash}'  # in status view, drop to shell at selected file

bind generic + >!git commit --amend
bind generic = >!git commit

bind generic <F1> >!git pull --rebase
bind generic <F2> >!git pull --rebase origin master

bind generic <F6> >!push_to_remotes.sh
bind generic <F18> >!push_to_remotes.sh -f  # F18 equals <Shift + F6> on my keyboards
bind generic <F7> >!git push

bind generic <F10> quit

bind generic 1 ?@git reset --hard HEAD~1
bind generic 2 ?@git reset --hard HEAD~2
bind generic 3 ?@git reset --hard HEAD~3
bind generic 4 ?@git reset --hard HEAD~4
bind generic 5 ?@git reset --hard HEAD~5
bind generic 9 ?@git reset --hard %(commit)~1
bind generic 0 ?@git reset --hard HEAD
bind generic ) ?@git reset --soft HEAD~1

# info ---------------------------------------------------------------------------------------------
# see: https://jonas.github.io/tig/doc/manual.html
# see: https://github.com/jonas/tig/blob/master/tigrc
# see: https://github.com/jonas/tig/blob/master/doc/tigrc.5.adoc#color-command
#
# nice tigrc variables:
# %(blob)       Manual says: "The currently selected blob ID.", I think it is the currently selected patch
# %(commit)
# %(file)
# %(lineno)