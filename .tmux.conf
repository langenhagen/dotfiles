# Change prefix Key -------------------------------------------------------------------------------
set -g prefix C-a # set the tmux prefix key; to use ctrl+a in your shell, press ctrl+a twice
bind C-a send-prefix

# Settings ----------------------------------------------------------------------------------------
set -g default-terminal "xterm-256color"
set -g default-command /usr/bin/fish
set -g default-shell /usr/bin/fish
set -g history-limit 20000  # scrollback size, default is 2000
set -g mouse on  # enable mouse mode
set -g pane-border-fg colour238
set -g pane-active-border-fg colour250
set -ga word-separators "/,.;" # add a new word separators

set-window-option -g mode-keys vi

# Key bindings ------------------------------------------------------------------------------------
bind C-r source-file ~/.tmux.conf  # reload the tmux conf

bind -n C-s splitw -h -p 50 # split pane horizontally
bind -n C-f splitw -v -p 50 # split pane vertically
bind -n C-x copy-mode\; send-keys VoWW Enter # copy the current line in fish shell to the clipboard without the leading fish shell

bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -fi -selection primary | xclip -i -selection clipboard"
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -fi -selection primary | xclip -i -selection clipboard"
bind -T copy-mode-vi DoubleClick1Pane send-keys -X copy-pipe-and-cancel "xclip -fi -selection primary | xclip -i -selection clipboard"
unbind -T copy-mode-vi MouseDragEnd1Pane # disable going out of copy mode after selecting something with the mouse

# Status bar --------------------------------------------------------------------------------------
set -g status-interval 1
set -g status-left-length 100
set-option -g status-bg black
set-option -g status-fg colour255

status_left="#[bg=black]\
#[fg=colour210][#S][#{pane_index}]\
#[fg=colour227][#{pane_current_path}]\
#[fg=colour110]#(cd \"#{pane_current_path}\" && cd \"`git rev-parse --show-toplevel`/.git\" && git branch | sed 's/\\* \\(.*\\)/[\\1]/')\
#[fg=colour196][#(pstree -s #{pane_pid} | sed 's|---|/|g' | sed 's|systemd/tmux: server/fish/||g')]\
#[fg=default]   "

status_right="#[bg=black]\
#[fg=colour227][%d/%m %H:%M]\
#[fg=colour210][#(gsettings get org.gnome.desktop.input-sources mru-sources | sed -r \"s/\\S*\\s'([^']+).*/\\1/\")]\
#[fg=default]"

set -g status-left $status_left
set -g status-right $status_right

# Tips and pointers -------------------------------------------------------------------------------
# bind is an alias for bind-key
# unbind is an alias for unbind-key
# bind -T <key-table>  # binds the key to a key table; defaul key-table is `prefix`
# bind -n <...>  # -n: no prefix needed, means, no need pressing ctrl+b; same as `bind -T root <...>`
# set is the alias of set-option.
# set -g is used to set global options
# set -ga appends values to existing settings.
# #S means ... no clue
#
# #(bash_command_to_be_executed)
# #{tmux_var_to_be_read}
#
# if you want to include the `git status` into the status line, something like the following must be
# done:
#   1. #(cd to \"#{pane_current_path}/.git\" && git branch | grep \* | cut -d ' ' -f2)
#
# C/p the following into the bash command line in order to see all colors
# for i in {0..255} ; do printf "\x1b[38;5;${i}mcolour${i}\n"; done
# the default color appears to be color2
#
# formatting of status line text:
# #[fg=colour235,bg=colour252,bold]
# #[fg=colour39,bg=colour234,nobold]
# #[fg=colour25,bg=colour39,noreverse,bold]  # reverse, no reverse switchers bg and fg colors
#
#
# Print the 256 colors in Bash:
# for i in {0..15} ; do
#     for j in {0..15} ; do
#         ((c= j * 16 + i ));
#         printf "\x1b[38;5;${c}mcolour%3d " ${c};
#     done
#     printf "\n";
# done