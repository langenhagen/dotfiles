# Change prefix Key -------------------------------------------------------------------------------
set -g prefix C-a # set the tmux prefix key; to use ctrl+a in your shell, press ctrl+a twice
bind C-a send-prefix

# Settings ----------------------------------------------------------------------------------------
# set -g default-terminal "screen-256color"  # allows for fn + arrow keys in neovim but breaks alt + arrow in vim
set -g default-terminal "xterm-256color"
set -g default-shell /usr/bin/fish
set -g history-limit 50000  # scrollback size, default is 2000
set -g mouse on  # enable mouse mode
set -ga word-separators "/,.;" # add a new word separators

set -g base-index 1  # start windows at 1, not 0
setw -g pane-base-index 1  # start panes at 1, not 0

set -g pane-border-style fg=colour238,bg=default
set -g pane-active-border-style fg=colour250,bg=default

set-window-option -g mode-keys vi

set -sg escape-time 10  # in neovim, switch to normal mode immediately after detecting escape keypress


# Key bindings ------------------------------------------------------------------------------------
bind C-r source-file ~/.tmux.conf \; display "Reloaded at %s!"  # reload the tmux conf

bind -n C-Up select-window -t :-
bind -n C-Down select-window -t :+
bind -n C-f splitw -v -p 50  # split pane vertically
bind -n C-s splitw -h -p 50  # split pane horizontally
bind -n C-S-Up swap-pane -U  # move pane down
bind -n C-S-Down swap-pane -D  # move pane up

bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -fi -selection primary | xclip -i -selection clipboard"
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -fi -selection primary | xclip -i -selection clipboard"

bind -T copy-mode-vi DoubleClick1Pane send-keys -X copy-pipe-and-cancel "xclip -fi -selection primary | xclip -i -selection clipboard"
unbind -T copy-mode-vi MouseDragEnd1Pane  # disable going out of copy mode after selecting something with the mouse

# Status bar --------------------------------------------------------------------------------------
set -g status-interval 1
set -g status-left-length 100
set -g status-right-length 100
set-option -g status-bg black
set-option -g status-fg colour255

status_left="#[bg=black]#[fg=colour210]\
#{session_name} \
#{window_index}/#(tmux list-windows | wc -l) \
#{pane_index}/#{window_panes} \
#[fg=colour227]\
#{pane_current_path} \
#[fg=colour110]\
#(pstree -s #{pane_pid} | sed 's|---|/|g' | sed -E 's|.*systemd/tmux: server/fish/?||g')\
#[fg=default]   "
set -g status-left $status_left

status_right="#[bg=black]#[fg=default]"
set -g status-right $status_right

# Tips and pointers -------------------------------------------------------------------------------
# bind is an alias for bind-key
# unbind is an alias for unbind-key
# bind -T <key-table>  # binds the key to a key table; defaul key-table is `prefix`
# bind -n <...>  # -n: no prefix needed, means, no need pressing ctrl+b; same as `bind -T root <...>`
# set is the alias of set-option.
# set -g is used to set global options
# set -ga appends values to existing settings.

# show all variables
# tmux display-message -a

# variable names:
#I	window index
#S	session name
#W	window name
#F	window flags
#H	Hostname
#h	Hostname, short
#D	pane id
#P	pane index
#T	pane title
#
# #(bash_command_to_be_executed)
# #{tmux_var_to_be_read}
#
# if you want to include the `git status` into the status line, something like the following must be
# done:
#   1. #(cd to \"#{pane_current_path}/.git\" && git branch | grep \* | cut -d ' ' -f2)
#
# C/p the following into the bash command line in order to see all colors
# for i in {0..255} ; do printf "\x1b[38;5;${i}mcolour${i}\n"; done
# the default color appears to be color2
#
# formatting of status line text:
# #[fg=colour235,bg=colour252,bold]
# #[fg=colour39,bg=colour234,nobold]
# #[fg=colour25,bg=colour39,noreverse,bold]  # reverse, no reverse switchers bg and fg colors
#
#
# Print the 256 colors in Bash:
# for i in {0..15} ; do
#     for j in {0..15} ; do
#         ((c= j * 16 + i ));
#         printf "\x1b[38;5;${c}m%9s" "colour${c}";
#     done
#     printf "\n";
# done
